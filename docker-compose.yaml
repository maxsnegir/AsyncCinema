version: "3.8"

services:
  postgres:
    image: postgres:12.4
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./etl/sqlite_to_postgres/psql_schema.sql:/docker-entrypoint-initdb.d/psql_schema.sql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    env_file:
      - .env

  redis_api:
    image: redis
    command:
      - redis-server
    env_file:
      - .env

  etl:
    build: ./etl
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
    volumes:
      - etl_data:/etl

  backend_api:
    container_name: backend_api
    build: src/
    image: backend_api_image
    restart: always
    env_file:
      - .env
    depends_on:
      - redis_api
      - elasticsearch
    volumes:
      - ./src/:/api/

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf:/etc/nginx/conf.d:ro
    depends_on:
      - auth_service
      - backend_api
    ports:
      - "81:8082" #  fast_api
      - "82:8083" #  auth-flask
    restart: always


  auth_service:
    container_name: auth
    build:
      context: ./auth/.
      target: prod
    image: auth_service_image
    restart: always
    env_file:
      - ./auth/.env
    depends_on:
      - redis_auth
      - auth_db

  auth_db:
    image: postgres:12.4
    restart: always
    env_file:
      - ./auth/.env
    volumes:
      - auth_db_data:/var/lib/postgresql/data/
    ports:
      - "5439:5432"

  redis_auth:
    image: redis
    command:
      - redis-server
    env_file:
      - ./auth/.env
    ports:
      - "6379:6379"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "5775:5775/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14268:14268"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

volumes:
  es_data:
  postgres_data:
  etl_data:
  auth_db_data:
